#!/bin/bash

print_start_message() {
  config_name=$1
  echo -e "start backing up \e[32m${config_name} config\e[0m..."
}

print_finish_message() {
  config_name=$1
  echo -e "finished backing up \e[32m${config_name} config\e[0m"
}

push_dotfiles_changes() {
  cd ~/work/personal/repositories/dotfiles/
  if git status --porcelain | grep -q .; then
    git add .
    git commit -m "updated via bak at $(date)"
    git push
  else
    echo "nothing to commit, working tree clean"
  fi
}

backup_tmux() {
  print_start_message "tmux"
  cp ~/.tmux.conf ~/work/personal/repositories/dotfiles/tmux/
  print_finish_message "tmux"
}

backup_zsh() {
  print_start_message "zsh"
  cp ~/.zshrc ~/work/personal/repositories/dotfiles/zsh/
  print_finish_message "zsh"
}

backup_p10k() {
  print_start_message "p10k"
  cp ~/.p10k.zsh ~/work/personal/repositories/dotfiles/p10k/
  print_finish_message "p10k"
}

backup_bin() {
  print_start_message "bin scripts"
  cp -r ~/bin ~/work/personal/repositories/dotfiles
  print_finish_message "bin scripts"
}

backup_dotfiles() {
  echo -e "START BACKING UP \e[31mALL DOTFILE CONFIGS\e[0m..."
  echo "=========================================="
  backup_zsh
  echo "------------------------------------------"
  backup_p10k
  echo "------------------------------------------"
  backup_tmux
  echo "------------------------------------------"
  backup_bin
  echo "=========================================="
}

backup_nvim() {
  print_start_message "nvim"
  cd ~/.config/nvim
  if git status --porcelain | grep -q .; then
    git add .
    git commit -m "updated nvim via bak at $(date)"
    git push
  else
    echo "nothing to commit, working tree clean"
  fi
  print_finish_message "nvim"
}

# Function to display usage
usage() {
  echo "ERROR: No option provided, use one of the following:"
  echo -e "  --tmux     Backup \e[32mtmux\e[0m config"
  echo -e "  --zsh      Backup \e[32mzsh\e[0m config"
  echo -e "  --p10k     Backup \e[32mp10k\e[0m config"
  echo -e "  --bin      Backup \e[32mbin\e[0m scripts"
  echo -e "  --dotfiles Backup \e[32mall dotfiles\e[0m configs"
  echo -e "  --nvim     Backup \e[32mnvim\e[0m config"
  exit 1
}

# Initialize an array to store options
options=()

# Parse command line options
while [[ "$1" != "" ]]; do
  case $1 in
  --tmux)
    options+=("tmux")
    ;;
  --zsh)
    options+=("zsh")
    ;;
  --p10k)
    options+=("p10k")
    ;;
  --bin)
    options+=("bin")
    ;;
  --dotfiles)
    options+=("dotfiles")
    ;;
  --nvim)
    options+=("nvim")
    ;;
  *)
    usage
    ;;
  esac
  shift
done

# Check if no option was provided
if [ ${#options[@]} -eq 0 ]; then
  usage
fi

# Track if any changes were made
dotfiles_changes_made=false

# Execute functions in the order of options provided
for option in "${options[@]}"; do
  case $option in
  tmux)
    backup_tmux
    dotfiles_changes_made=true
    ;;
  zsh)
    backup_zsh
    dotfiles_changes_made=true
    ;;
  p10k)
    backup_p10k
    dotfiles_changes_made=true
    ;;
  bin)
    backup_bin
    dotfiles_changes_made=true
    ;;
  dotfiles)
    backup_dotfiles
    dotfiles_changes_made=true
    ;;
  nvim)
    backup_nvim
    ;;
  esac
done

# Push dotfiles changes if any were made
if [ "$dotfiles_changes_made" = true ]; then
  echo -e "FINISHED BACKING UP \e[31mALL DOTFILE CONFIGS\e[0m, PUSHING CHANGES TO DOTFILES REPOSITORY"
  push_dotfiles_changes
fi
